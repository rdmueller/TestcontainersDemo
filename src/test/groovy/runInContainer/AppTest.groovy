/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
package runInContainer

import org.testcontainers.containers.GenericContainer
import org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy
import org.testcontainers.images.builder.ImageFromDockerfile
import org.testcontainers.spock.Testcontainers
import spock.lang.Specification

@Testcontainers
class AppTest extends Specification {
    def "sample how to run a command in a testcontainer"() {
        given: "a base container"
            GenericContainer container = new GenericContainer(
                new ImageFromDockerfile()
                    .withDockerfileFromBuilder ({ builder ->
                        builder
                                .from("alpine:3.2")
                                // create s simple shell script in the container
                                .run("echo 'while true; do echo \"sleeping\"; sleep 2; done' >> /runendless.sh && chmod +x /runendless.sh")
                                // this ensures that the container will not be stopped
                                // because this process will run endless
                                .cmd("/runendless.sh")
                                .build()
                    })
            ).withStartupCheckStrategy(new IsRunningStartupCheckStrategy())
            container.start()
        when: "a ls is executed"
            def result = container.execInContainer("ls", "-ltra")
            println result.stdout
        then: "the output contains the `runendless.sh` script"
            result.stdout.contains('runendless.sh')
    }
}
